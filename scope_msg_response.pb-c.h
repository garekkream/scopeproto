/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: scope_msg_response.proto */

#ifndef PROTOBUF_C_scope_5fmsg_5fresponse_2eproto__INCLUDED
#define PROTOBUF_C_scope_5fmsg_5fresponse_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _ScopeMsgServerRes ScopeMsgServerRes;


/* --- enums --- */

typedef enum _ScopeMsgServerRes__ScopeMsgIdRes {
  SCOPE_MSG_SERVER_RES__SCOPE_MSG_ID_RES__SCOPE_MSGID_DUMMY_RES = 0,
  SCOPE_MSG_SERVER_RES__SCOPE_MSG_ID_RES__SCOPE_MSGID_REGISTER_RES = 1,
  SCOPE_MSG_SERVER_RES__SCOPE_MSG_ID_RES__SCOPE_MSGID_UNREGISTER_RES = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SCOPE_MSG_SERVER_RES__SCOPE_MSG_ID_RES)
} ScopeMsgServerRes__ScopeMsgIdRes;
typedef enum _ScopeMsgServerRes__ScopeRegisterFlagsRes {
  SCOPE_MSG_SERVER_RES__SCOPE_REGISTER_FLAGS_RES__SERVER_SW_VER = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SCOPE_MSG_SERVER_RES__SCOPE_REGISTER_FLAGS_RES)
} ScopeMsgServerRes__ScopeRegisterFlagsRes;

/* --- messages --- */

struct  _ScopeMsgServerRes
{
  ProtobufCMessage base;
  ScopeMsgServerRes__ScopeMsgIdRes id;
  int32_t device_id;
  protobuf_c_boolean has_payload_flags;
  int32_t payload_flags;
  protobuf_c_boolean has_payload_data;
  ProtobufCBinaryData payload_data;
};
#define SCOPE_MSG_SERVER_RES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&scope_msg_server_res__descriptor) \
    , 0, 0, 0,0, 0,{0,NULL} }


/* ScopeMsgServerRes methods */
void   scope_msg_server_res__init
                     (ScopeMsgServerRes         *message);
size_t scope_msg_server_res__get_packed_size
                     (const ScopeMsgServerRes   *message);
size_t scope_msg_server_res__pack
                     (const ScopeMsgServerRes   *message,
                      uint8_t             *out);
size_t scope_msg_server_res__pack_to_buffer
                     (const ScopeMsgServerRes   *message,
                      ProtobufCBuffer     *buffer);
ScopeMsgServerRes *
       scope_msg_server_res__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   scope_msg_server_res__free_unpacked
                     (ScopeMsgServerRes *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*ScopeMsgServerRes_Closure)
                 (const ScopeMsgServerRes *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor scope_msg_server_res__descriptor;
extern const ProtobufCEnumDescriptor    scope_msg_server_res__scope_msg_id_res__descriptor;
extern const ProtobufCEnumDescriptor    scope_msg_server_res__scope_register_flags_res__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_scope_5fmsg_5fresponse_2eproto__INCLUDED */
